name: Build
on: [push, pull_request, workflow_dispatch]
jobs:
  macos_x64:
    name: macOS (Intel)
    runs-on: macos-12
    env:
      osx_min_ver: "11.0"
      osx_arch: "x86_64"
    steps:
      - uses: actions/checkout@v3
      - name: "Install dependencies"
        run: |
          brew upgrade qt@5 ninja || brew install qt@5 ninja
          echo "BRANCH=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV
          echo "/usr/local/bin" >> $GITHUB_PATH
      - name: "Prepare build"
        run: |
          cmake -DCMAKE_OSX_DEPLOYMENT_TARGET=${{ env.osx_min_ver }} \
                -DCMAKE_OSX_ARCHITECTURES=${{ env.osx_arch }} \
                -DCMAKE_BUILD_TYPE=Release \
                -G Ninja \
                -B build
      - name: "Build project"
        run: cmake --build build --config "Release" --parallel
      - working-directory: "build"
        name: "Package DMG (macOS)"
        run: /usr/local/opt/qt5/bin/macdeployqt bin/VGMTrans.app -dmg -always-overwrite
      - name: "Upload artifact"
        uses: actions/upload-artifact@v3
        with:
          name: VGMTrans-${{ github.sha }}-${{ env.BRANCH }}-${{ env.osx_arch }}-${{ runner.os }}.dmg
          path: "build/bin/VGMTrans.dmg"
  Ubuntu:
    runs-on: ubuntu-20.04
    name: Linux
    steps:
      - uses: actions/checkout@v3
      - name: "Set environment variables"
        run: |
          echo "BRANCH=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV
      - name: "Install dependencies"
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 16
          sudo apt-get update && sudo apt-get upgrade -y
          sudo apt-get install -y pkg-config clang-16 lld-16 ninja-build \
            qt5base qt5base-dev libqt5svg5-dev libqt5svg5 libqt5waylandclient5 libqt5waylandclient5-dev libqt5waylandcompositor5 libqt5waylandcompositor5-dev libgl1-mesa-dev \
            libjack-dev libsndfile1-dev libpulse-dev
      - name: "Prepare build"
        run: cmake -DCMAKE_C_COMPILER="clang-16" -DCMAKE_CXX_COMPILER="clang++-16" -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release -GNinja -B build
      - name: "Build project"
        run: cmake --build build --config "Release" --parallel
      - name: "Make AppImage"
        working-directory: "build"
        run: |
          echo "Creating AppDir structure for AppImage"
          DESTDIR=appdir ninja install
          find appdir/
          mkdir -p appdir/usr/share
          cp ../bin/mame_roms.xml appdir/usr/bin
          cp ../src/ui/qt/resources/VGMTrans.desktop appdir/usr/share
          cp ../src/ui/qt/resources/vgmtrans.png appdir/
          mkdir -p appdir/usr/lib
          cp ../lib/bass/*.so appdir/usr/lib/
          echo "Downloading linuxdeployqt"
          wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
          chmod a+x linuxdeployqt-continuous-x86_64.AppImage
          echo "Creating AppImage"
          ./linuxdeployqt-continuous-x86_64.AppImage appdir/usr/share/VGMTrans.desktop \
            -executable=appdir/usr/lib/libbass.so -executable=appdir/usr/lib/libbassmidi.so \
            -appimage -qmake=/opt/qt515/bin/qmake -extra-plugins=platforms/,wayland-shell-integration/,wayland-decoration-client/ \
            -verbose=10
          mv VGMTrans*.AppImage VGMTrans.AppImage
      - name: "Upload artifact"
        uses: actions/upload-artifact@v3
        with:
          name: VGMTrans-${{ github.sha }}-${{ env.BRANCH }}-x86_64-${{ runner.os }}.AppImage
          path: "build/VGMTrans.AppImage"
  Windows:
    runs-on: windows-2022
    name: Windows
    steps:
       - uses: actions/checkout@v3
         with:
          submodules: true
       - uses: ilammy/msvc-dev-cmd@v1
       - name: "Prepare build"
         run: |
          echo "BRANCH=$(git rev-parse --abbrev-ref HEAD)" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          cmake -DCMAKE_C_COMPILER=cl -DCMAKE_CXX_COMPILER=cl -DCMAKE_BUILD_TYPE=Release -GNinja -B build
       - name: "Build project"
         run: cmake --build build --config "Release" --parallel
       - name: "Package artifact"
         run: 7z a "VGMTrans.zip" -r .\build\bin*
       - name: "Upload artifact"
         uses: actions/upload-artifact@v3
         with:
           name: VGMTrans-${{ github.sha }}-${{ env.BRANCH }}-x86_64-${{ runner.os }}
           path: VGMTrans.zip
       
